
//https://msdn.microsoft.com/en-us/library/windows/desktop/ms679282(v=vs.85).aspx
VOID WINAPI CloseThreadWaitChainSession(
	_In_ HWCT WctHandle
	);

//https://msdn.microsoft.com/en-us/library/windows/desktop/ms679364(v=vs.85).aspx
BOOL WINAPI GetThreadWaitChain(
	_In_     HWCT                 WctHandle,
	_In_opt_ DWORD_PTR            Context,
	_In_     DWORD                Flags,
	_In_     DWORD                ThreadId,
	_Inout_  LPDWORD              NodeCount,
	_Out_    PWAITCHAIN_NODE_INFO NodeInfoArray,
	_Out_    LPBOOL               IsCycle
	);

https://msdn.microsoft.com/en-us/library/windows/desktop/ms680543(v=vs.85).aspx
HWCT WINAPI OpenThreadWaitChainSession(
	_In_     DWORD              Flags,
	_In_opt_ PWAITCHAINCALLBACK callback
	);

https://msdn.microsoft.com/en-us/library/windows/desktop/ms680564(v=vs.85).aspx
VOID WINAPI RegisterWaitChainCOMCallback(
	_In_ PCOGETCALLSTATE       CallStateCallback,
	_In_ PCOGETACTIVATIONSTATE ActivationStateCallback
	);

https://msdn.microsoft.com/en-us/library/windows/desktop/ms681422(v=vs.85).aspx
typedef struct _WAITCHAIN_NODE_INFO {
	WCT_OBJECT_TYPE   ObjectType;
	WCT_OBJECT_STATUS ObjectStatus;
	union {
		struct {
			WCHAR         ObjectName[WCT_OBJNAME_LENGTH];
			LARGE_INTEGER Timeout;
			BOOL          Alertable;
		} LockObject;
		struct {
			DWORD ProcessId;
			DWORD ThreadId;
			DWORD WaitTime;
			DWORD ContextSwitches;
		} ThreadObject;
	};
} WAITCHAIN_NODE_INFO, *PWAITCHAIN_NODE_INFO;



https://msdn.microsoft.com/en-us/library/windows/desktop/ms681421(v=vs.85).aspx
VOID CALLBACK WaitChainCallback(
	HWCT                 WctHandle,
	DWORD_PTR            Context,
	DWORD                CallbackStatus,
	LPDWORD              NodeCount,
	PWAITCHAIN_NODE_INFO NodeInfoArray,
	LPBOOL               IsCycle
	);